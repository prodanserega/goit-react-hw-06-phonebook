{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","uuidv4","contactsActions","addContact","createAction","name","phone","payload","id","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ContactForm","handelChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","props","find","item","toLowerCase","alert","onSubmit","resetForm","this","className","s","form","input","type","placeholder","onChange","button","Component","connect","dispatch","contact","ContactListItem","onRemove","onClick","filterContacts","nonormalizeFilter","includes","length","list","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.96f8e177.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1rqz8\",\"button\":\"ContactList_button__1FW4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__3OqdS\",\"input\":\"Filter_input__2AGlk\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nuuidv4();\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, phone }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    phone,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nconst contactsActions = {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilter,\r\n};\r\n\r\nexport default contactsActions;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [contactsActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import contactsReducer from \"../redux/contacts/contacts-reducer\";\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  handelChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    if (!this.state.name || !this.state.phone) {\r\n      alert(\"Enter the name!\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())\r\n    ) {\r\n      alert(`${name} already exists. Try another name`);\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () =>\r\n    this.setState({\r\n      name: \"\",\r\n      phone: \"\",\r\n    });\r\n\r\n  render() {\r\n    const { name, phone } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleFormSubmit}>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={this.handelChangeForm}\r\n        />\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          placeholder=\"Enter phone number\"\r\n          value={phone}\r\n          onChange={this.handelChangeForm}\r\n        />\r\n        <button className={s.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (contact) => dispatch(contactsActions.addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nimport s from \"../ContactList/ContactList.module.css\";\r\n\r\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\r\n  return (\r\n    <li key={id} className={s.item}>\r\n      {name}: {phone}{\" \"}\r\n      <button className={s.button} onClick={() => onRemove(id)}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactList = ({ contacts, onRemove, id }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul className={s.list} key={id}>\r\n      {contacts.map((contact) => (\r\n        <ContactListItem {...contact} onRemove={onRemove} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst filterContacts = (contacts, filter) => {\r\n  const nonormalizeFilter = filter.toLowerCase();\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(nonormalizeFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: filterContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onRemove: (id) => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nimport s from \"../Filter/Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <form className={s.form}>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n        placeholder=\"Enter name for Search\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\n\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\n\nimport \"../index.css\";\n\nconst App = () => {\n  return (\n    <>\n      <ContactForm />\n      <h2 className=\"title\">Contacts List</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store.js\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={\"loading\"} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__lnmTG\",\"input\":\"ContactForm_input__3-0II\",\"button\":\"ContactForm_button__kKwBf\"};"],"sourceRoot":""}